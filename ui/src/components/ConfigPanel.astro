---
// Static UI for inline Guard Config section
import PatternSelector from "./PatternSelector.astro";
---

<div id="config-panel" class="panel">
  <h2 class="text-heading">Config</h2>
  <div id="config-disabled-hint" class="text-caption text-muted" style="display:none;">Conecta al menos un slave para configurar.</div>

  <div class="panel__content">
    <!-- Protecci칩n / patr칩n -->
    <div>
      <!-- Componente con opciones y emojis alineados con Guard -->
      <!-- Usamos el mismo id gc-protectionPattern para compatibilidad -->
      <PatternSelector />
    </div>

    <!-- Toggles principales -->
    <div class="grid grid-2-responsive">
      <div class="switch-group">
        <span class="text-body">Preferir color espec칤fico</span>
        <label class="switch">
          <input type="checkbox" id="gc-preferColor" />
          <span class="switch__track"></span>
          <span class="switch__thumb"></span>
        </label>
      </div>
      <div class="switch-group">
        <span class="text-body">Excluir colores espec칤ficos</span>
        <label class="switch">
          <input type="checkbox" id="gc-excludeColor" />
          <span class="switch__track"></span>
          <span class="switch__thumb"></span>
        </label>
      </div>
      <div class="switch-group">
        <span class="text-body">Usar tiempos aleatorios</span>
        <label class="switch">
          <input type="checkbox" id="gc-randomWaitTime" />
          <span class="switch__track"></span>
          <span class="switch__thumb"></span>
        </label>
      </div>
      <div class="switch-group">
        <span class="text-body">Gastar todos al iniciar</span>
        <label class="switch">
          <input type="checkbox" id="gc-spendAllPixelsOnStart" />
          <span class="switch__track"></span>
          <span class="switch__thumb"></span>
        </label>
      </div>
    </div>

    <!-- N칰meros -->
    <div class="grid grid-2-responsive">
      <div class="input-group">
        <label class="input-label">Cargas m칤nimas para esperar</label>
        <input type="number" id="gc-minChargesToWait" min="0" class="input" />
      </div>
      <div class="input-group">
        <label class="input-label">P칤xeles por lote</label>
        <input type="number" id="gc-pixelsPerBatch" min="1" class="input" />
      </div>
      <div class="input-group">
        <label class="input-label">M치ximo reintentos por lote</label>
        <input type="number" id="gc-maxRetries" min="1" max="10" value="3" class="input" />
      </div>
      <div class="input-group">
        <label class="input-label">Estrategia de distribuci칩n</label>
        <select id="gc-chargeStrategy" class="input">
          <option value="greedy">Greedy (칩ptimo API)</option>
          <option value="balanced">Balanced (proporcional)</option>
          <option value="round_robin">Round Robin</option>
        </select>
      </div>
      <div class="input-group">
        <label class="input-label">Bloqueo tras pintar (s)</label>
        <input type="number" id="gc-recentLockSeconds" min="0" class="input" />
      </div>
      <div id="gc-random-times" class="contents">
        <div class="input-group">
          <label class="input-label">Tiempo m칤nimo (s)</label>
          <input type="number" id="gc-randomWaitMin" step="0.1" min="0" class="input" />
        </div>
        <div class="input-group">
          <label class="input-label">Tiempo m치ximo (s)</label>
          <input type="number" id="gc-randomWaitMax" step="0.1" min="0" class="input" />
        </div>
      </div>
      <div class="input-group">
        <label class="input-label">Umbral de color</label>
        <input type="number" id="gc-colorThreshold" min="0" max="255" class="input" />
      </div>
    </div>

    <!-- Paletas -->
    <div id="gc-preferredColors-section" style="display:none;">
      <div class="color-section-header">
        <h3 class="text-body text-medium">Colores Preferidos</h3>
        <button id="gc-clearPreferred" class="btn btn--danger btn--small" style="display:none;">Limpiar</button>
      </div>
      <div id="gc-available-colors-preferred" class="color-palette-grid"></div>
    </div>
    <div id="gc-excludedColors-section" style="display:none;">
      <div class="color-section-header">
        <h3 class="text-body text-medium">Colores Excluidos</h3>
        <button id="gc-clearExcluded" class="btn btn--danger btn--small" style="display:none;">Limpiar</button>
      </div>
      <div id="gc-available-colors-excluded" class="color-palette-grid"></div>
    </div>

    <!-- Footer -->
    <div class="panel__footer">
      <button id="gc-reset-btn" class="btn btn--ghost" title="Restablecer">游댃</button>
    </div>
    <div class="text-caption text-muted"><span id="gc-status"></span></div>
  </div>
</div>

<!-- Styles espec칤ficos para ConfigPanel -->
<style>
  .grid {
    display: grid;
    gap: var(--space-4);
  }
  
  .grid-2-responsive {
    grid-template-columns: 1fr;
  }
  
  @media (min-width: 640px) {
    .grid-2-responsive {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  
  .switch-group {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: var(--space-3);
  }
  
  .input-group {
    display: flex;
    flex-direction: column;
    gap: var(--space-2);
  }
  
  .input-label {
    color: hsl(var(--foreground));
    font-size: var(--text-sm);
    font-weight: 500;
  }
  
  .color-section-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: var(--space-2);
  }
  
  .color-section-subheader {
    margin: var(--space-2) 0 var(--space-1) 0;
  }
  
  .color-palette {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-2);
  }

  .color-palette-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(32px, 1fr));
    gap: var(--space-1);
    padding: var(--space-2);
    background: hsl(var(--muted));
    border-radius: var(--radius);
    max-height: 120px;
    overflow-y: auto;
  }

  .color-chip {
    position: relative;
    width: 32px;
    height: 32px;
    border-radius: var(--radius);
    border: 2px solid transparent;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .color-chip:hover {
    transform: scale(1.1);
    border-color: hsl(var(--foreground));
  }

  .color-chip.selected {
    border-color: hsl(var(--primary));
    box-shadow: 0 0 0 2px hsl(var(--primary) / 0.3);
  }

  .color-chip::after {
    content: attr(data-id);
    position: absolute;
    bottom: -18px;
    left: 50%;
    transform: translateX(-50%);
    font-size: 10px;
    color: hsl(var(--foreground));
    white-space: nowrap;
  }
  
  .contents {
    display: contents;
  }
  
  .panel__footer {
    display: flex;
    justify-content: flex-end;
    gap: var(--space-2);
    padding-top: var(--space-2);
    border-top: 1px solid hsl(var(--border));
    margin-top: var(--space-4);
  }
</style>
